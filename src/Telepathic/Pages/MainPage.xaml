<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:pageModels="clr-namespace:Telepathic.PageModels"
             xmlns:models="clr-namespace:Telepathic.Models"
             xmlns:converters="clr-namespace:Telepathic.Converters"
             xmlns:controls="clr-namespace:Telepathic.Pages.Controls"
             xmlns:sf="clr-namespace:Syncfusion.Maui.Toolkit.TextInputLayout;assembly=Syncfusion.Maui.Toolkit"
             xmlns:cards="clr-namespace:Syncfusion.Maui.Toolkit.Cards;assembly=Syncfusion.Maui.Toolkit"
             xmlns:b="clr-namespace:Syncfusion.Maui.Toolkit.Buttons;assembly=Syncfusion.Maui.Toolkit"
             xmlns:pullToRefresh="clr-namespace:Syncfusion.Maui.Toolkit.PullToRefresh;assembly=Syncfusion.Maui.Toolkit"
             xmlns:bottomSheet="clr-namespace:Syncfusion.Maui.Toolkit.BottomSheet;assembly=Syncfusion.Maui.Toolkit"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:aloha="clr-namespace:AlohaKit.Animations;assembly=AlohaKit.Animations"
             xmlns:viewModels="clr-namespace:Telepathic.ViewModels"
             xmlns:effectsView="http://schemas.syncfusion.com/maui/toolkit"
             x:Class="Telepathic.Pages.MainPage"
             x:DataType="pageModels:MainPageModel"
             Title="{Binding Today}">

    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior
            EventName="NavigatedTo"
            Command="{Binding NavigatedToCommand}"/>
        <toolkit:EventToCommandBehavior
            EventName="NavigatedFrom"
            Command="{Binding NavigatedFromCommand}"/>
        <toolkit:EventToCommandBehavior
            EventName="Appearing"
            Command="{Binding AppearingCommand}"/>
        <!-- <toolkit:StatusBarBehavior StatusBarColor="{toolkit:AppThemeResource Background}"/> -->
    </ContentPage.Behaviors>

    <ContentPage.Resources>
        <ResourceDictionary>            
            <toolkit:AppThemeObject x:Key="TelepathyIcon" Light="icon_telepathy_light_off.png" Dark="icon_telepathy_dark_off.png"/>
            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
            <toolkit:MathExpressionConverter x:Key="MathExpressionConverter"/>
            <toolkit:MultiMathExpressionConverter x:Key="MultiMathExpressionConverter"/>
            <converters:AssistTypeToBoolConverter x:Key="AssistTypeToBoolConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid>
            <ImageButton Source="{toolkit:AppThemeResource TelepathyIcon}"
                        IsVisible="{Binding IsTelepathyEnabled,Converter={StaticResource InvertedBoolConverter}}"
                         HorizontalOptions="End"
                         VerticalOptions="Center"
                         Aspect="AspectFit"
                         HeightRequest="44"
                         WidthRequest="44"
                         Background="Transparent"
                         Command="{Binding ToggleSettingsCommand}"/>
            <ImageButton Source="icon_telepathy_on.png"
                         IsVisible="{Binding IsTelepathyEnabled}"
                         HorizontalOptions="End"
                         VerticalOptions="Center"
                         Aspect="AspectFit"
                         HeightRequest="44"
                         WidthRequest="44"
                         Background="Transparent"
                         Command="{Binding ToggleSettingsCommand}"/>
        </Grid>
    </Shell.TitleView>

    <Grid>
        <pullToRefresh:SfPullToRefresh
            IsRefreshing="{Binding IsRefreshing}"
            RefreshCommand="{Binding RefreshCommand}">
            <pullToRefresh:SfPullToRefresh.PullableContent>
                <ScrollView x:Name="ScrollView">
                    <!-- <VisualElement.Behaviors>
                        <aloha:ScrollViewScrollBehavior x:Name="ScrollBehavior"/>
                    </VisualElement.Behaviors> -->
                    <VerticalStackLayout
                        x:Name="ScrollContent"
                        Spacing="{StaticResource LayoutSpacing}"
                        Padding="{StaticResource LayoutPadding}">

                        <!-- <Button Text="Force" Command="{Binding ForcePriorityTaskRefreshCommand}"/> -->

                        <!-- Activity Indicator for telepathic analysis -->
                        <controls:ActivityIndicatorView
                            IsVisible="{Binding IsAnalyzingContext}"
                            IsRunning="{Binding IsAnalyzingContext}"
                            HorizontalOptions="Start"
                            Title="{Binding AnalysisStatusTitle}"
                            Detail="{Binding AnalysisStatusDetail}"
                            MinimumWidthRequest="200"
                            MinimumHeightRequest="100"
                            ShimmerStartColor="#4a90e2"
                            ShimmerEndColor="#9b59b6"/>                     <!-- Priority Tasks Section -->
                        <VerticalStackLayout 
                            IsVisible="{Binding ShouldShowPriorityTasks}"
                            Spacing="{StaticResource LayoutSpacing}"
                            Margin="0,0,0,12">                            
                            <Label Text="{Binding PersonalizedGreeting}"
                                   Style="{StaticResource Title2}"
                                   TextColor="{toolkit:AppThemeResource Tertiary}"/>    
                            <cards:SfCardLayout 
                                BindableLayout.ItemsSource="{Binding PriorityTasks}"
                                VerticalOptions="Center"
                                SwipeDirection="Left"      
                                HeightRequest="200"  
                                BackgroundColor="Transparent">
                                    <BindableLayout.ItemTemplate>
                                        <DataTemplate>
                                            <cards:SfCardView 
                                                x:DataType="viewModels:ProjectTaskViewModel"
                                                BackgroundColor="Transparent" 
                                                BorderWidth="0" 
                                                FadeOutOnSwiping="True">                                                      
                                                <Border
                                                        StrokeThickness="1"
                                                        Stroke="{toolkit:AppThemeResource Surface1}"
                                                        StrokeShape="RoundRectangle 20"
                                                        BackgroundColor="{toolkit:AppThemeResource Surface0}"
                                                        InputTransparent="False"
                                                        >
                                                    <Border.GestureRecognizers>
                                                        <TapGestureRecognizer 
                                                            Command="{Binding NavigateToTaskCommand, Source={RelativeSource AncestorType={x:Type pageModels:MainPageModel}},x:DataType=pageModels:MainPageModel}"
                                                                CommandParameter="{Binding Task}"/>
                                                    </Border.GestureRecognizers>
                                                    <!-- <effectsView:SfEffectsView
                                                        TouchDownEffects="Highlight"
                                                        HighlightBackground="{toolkit:AppThemeResource OnBackground}"> -->
                                                        <Grid RowDefinitions="*"
                                                            ColumnDefinitions="*" IsClippedToBounds="True">
                                                            <!-- Checkbox in the upper left -->
                                                            <Grid ColumnSpacing="15"
                                                                ColumnDefinitions="Auto, *"
                                                                VerticalOptions="Start" HorizontalOptions="Start"
                                                                IsVisible="{Binding IsShowingReasoning,Converter={StaticResource InvertedBoolConverter}}">
                                                                <CheckBox 
                                                                    Grid.Row="0"
                                                                    Grid.Column="0"
                                                                    VerticalOptions="Center"
                                                                    IsChecked="{Binding IsCompleted}" 
                                                                    Color="{toolkit:AppThemeResource Primary}"
                                                                    CheckedChanged="PriorityTask_CheckedChanged"/>
                                                                <Label Text="{Binding Title}"
                                                                    VerticalOptions="Center"
                                                                    LineBreakMode="WordWrap"
                                                                    MaxLines="3"
                                                                    HorizontalOptions="Start"
                                                                    Grid.Column="1"
                                                                    TextColor="{toolkit:AppThemeResource OnBackground}"/>
                                                            </Grid>
                                                            
                                                            <!-- Priority Reasoning (replaces title when visible) -->
                                                            <Label Text="{Binding PriorityReasoning}"
                                                                    Style="{StaticResource Body1}"
                                                                    FontAttributes="Italic"
                                                                    LineBreakMode="WordWrap"
                                                                    VerticalOptions="Start"
                                                                    IsVisible="{Binding IsShowingReasoning}"
                                                                    TextColor="{toolkit:AppThemeResource OnBackground}"/>
                                                            
                                                            <HorizontalStackLayout Spacing="{StaticResource size160}"
                                                                HorizontalOptions="End"
                                                                VerticalOptions="End" IsClippedToBounds="True">
                                                                <ImageButton Source="{StaticResource IconInsights}"                                                                        
                                                                        Aspect="Center"
                                                                        HeightRequest="44"
                                                                        WidthRequest="44"
                                                                        BackgroundColor="Transparent"
                                                                        Command="{Binding ToggleShowReasoningCommand}"/>

                                                                <ImageButton Source="{StaticResource IconAssist}"
                                                                        IsVisible="{Binding Task.AssistType, Converter={StaticResource AssistTypeToBoolConverter}}"
                                                                        Aspect="Center"
                                                                        HeightRequest="44"
                                                                        WidthRequest="44"
                                                                        BackgroundColor="Transparent"
                                                                        Command="{Binding AssistCommand, Source={RelativeSource AncestorType={x:Type pageModels:MainPageModel}}, x:DataType=pageModels:MainPageModel}"
                                                                        CommandParameter="{Binding Task}"/>

                                                                <!-- <ImageButton Source="{StaticResource IconAssist}"
                                                                        IsVisible="{Binding AssistType, Converter={StaticResource AssistTypeToBoolConverter}}"
                                                                        Aspect="Center"
                                                                        HeightRequest="44"
                                                                        WidthRequest="44"
                                                                        BackgroundColor="Transparent"
                                                                        Command="{Binding CheckIsNearbyCommand, Source={RelativeSource AncestorType={x:Type pageModels:MainPageModel}}, x:DataType=pageModels:MainPageModel}"
                                                                        CommandParameter="{Binding .}"/> -->
                                                            </HorizontalStackLayout>
                                                            
                                                            
                                                            <!-- Project Name in the lower left -->
                                                            <Label 
                                                                Text="{Binding ProjectName, FallbackValue='Project'}"
                                                                Style="{StaticResource Body2}"
                                                                LineBreakMode="TailTruncation"
                                                                MaximumWidthRequest="{OnIdiom Phone=180, Tablet=400}"
                                                                HorizontalOptions="Start"
                                                                VerticalOptions="End"                                                                
                                                                TextColor="{toolkit:AppThemeResource Tertiary}"/>
                                                        </Grid>
                                                    <!-- </effectsView:SfEffectsView> -->
                                                </Border>                                                
                                            </cards:SfCardView>
                                        </DataTemplate>
                                    </BindableLayout.ItemTemplate>
                            </cards:SfCardLayout>
                        </VerticalStackLayout>

                        <controls:CategoryChart />

                        <Label Text="Projects"
                                Style="{StaticResource Title2}"/>

                        <ScrollView Orientation="Horizontal"
                                Margin="-30,0">
                            <HorizontalStackLayout
                                Spacing="15"
                                    Padding="30,0"
                                BindableLayout.ItemsSource="{Binding Projects}">
                                <BindableLayout.ItemTemplate>
                                    <DataTemplate x:DataType="models:Project">
                                        <controls:ProjectCardView WidthRequest="200">
                                            <controls:ProjectCardView.GestureRecognizers>
                                                <TapGestureRecognizer Command="{Binding NavigateToProjectCommand, Source={RelativeSource AncestorType={x:Type pageModels:MainPageModel}}, x:DataType=pageModels:MainPageModel}"
                                                        CommandParameter="{Binding .}"/>
                                            </controls:ProjectCardView.GestureRecognizers>
                                        </controls:ProjectCardView>
                                    </DataTemplate>
                                </BindableLayout.ItemTemplate>
                            </HorizontalStackLayout>
                        </ScrollView>

                        <Grid HeightRequest="44">
                            <Label Text="Tasks"
                                    Style="{StaticResource Title2}"
                                    VerticalOptions="Center"/>

                            <ImageButton
                                Source="{StaticResource IconClean}"
                                HorizontalOptions="End"
                                VerticalOptions="Center"
                                Aspect="Center"
                                HeightRequest="44"
                                WidthRequest="44"
                                IsVisible="{Binding HasCompletedTasks}"
                                Command="{Binding CleanTasksCommand}"/>
                        </Grid>

                        <VerticalStackLayout Spacing="15"
                                             BindableLayout.ItemsSource="{Binding Tasks}">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <controls:TaskView TaskCompletedCommand="{Binding CompletedCommand, Source={RelativeSource AncestorType={x:Type pageModels:MainPageModel}}, x:DataType=pageModels:MainPageModel}"/>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </VerticalStackLayout>
                    </VerticalStackLayout>
                </ScrollView>
            </pullToRefresh:SfPullToRefresh.PullableContent>
        </pullToRefresh:SfPullToRefresh>

        <!-- <VerticalStackLayout
            IsVisible="False"
            Background="Black"
            VerticalOptions="Center"
            HorizontalOptions="Center"
            Margin="0,0,30,300">
            <Label Text="{Binding HeightRequest, Source={x:Reference ScrollView}, x:DataType=ScrollView, StringFormat='ScrollView: {0}'}"/>
            <Label Text="{Binding HeightRequest, Source={x:Reference ScrollContent}, x:DataType=VerticalStackLayout, StringFormat='ScrollContent: {0}'}"/>
            <Label>
                <Label.Text>
                    <MultiBinding Converter="{StaticResource MultiMathExpressionConverter}"
                                  ConverterParameter="x1-x0"
                            StringFormat="Max: {0}">
                        <Binding Path="HeightRequest"
                                Source="{x:Reference ScrollView}"
                                x:DataType="ScrollView"/>
                        <Binding Path="HeightRequest"
                                Source="{x:Reference ScrollContent}"
                                x:DataType="VerticalStackLayout"/>
                    </MultiBinding>
                </Label.Text>
            </Label>

            
            <Label Text="{Binding Minimum, 
                    Source={x:Reference AddButtonAnimation}, StringFormat='Minimum: {0}', Mode=OneWay}"/>
            <Label Text="{Binding Maximum, 
                    Source={x:Reference AddButtonAnimation}, StringFormat='Maximum: {0}', Mode=OneWay}"/>
            <Label Text="{Binding ScrollY, Source={x:Reference ScrollBehavior}, StringFormat='ScrollY: {0}', Mode=OneWay}"/>
        </VerticalStackLayout> -->

        <VerticalStackLayout
            Spacing="{StaticResource LayoutSpacing}"
            VerticalOptions="End"
            HorizontalOptions="End"
            Margin="30">
            <!-- <VerticalStackLayout.Behaviors>
                <aloha:AnimateProgressDouble
                    x:Name="AddButtonAnimation"
                    TargetProperty="VisualElement.Opacity"
                    Progress="{Binding ScrollY, Source={x:Reference ScrollBehavior}, x:DataType=aloha:ScrollViewScrollBehavior}"
                    From="0"
                    To="1">
                    <aloha:AnimateProgressDouble.Maximum>
                        <MultiBinding Converter="{StaticResource MultiMathExpressionConverter}"
                                      ConverterParameter="x1-x0">
                            <Binding Path="HeightRequest"
                                    Source="{x:Reference ScrollView}"
                                    x:DataType="ScrollView"/>
                            <Binding Path="HeightRequest"
                                    Source="{x:Reference ScrollContent}"
                                    x:DataType="VerticalStackLayout"/>
                        </MultiBinding>
                    </aloha:AnimateProgressDouble.Maximum>
                    <aloha:AnimateProgressDouble.Minimum>
                        <Binding
                            Path="Maximum"
                            Converter="{StaticResource MathExpressionConverter}"
                            ConverterParameter="x-100"
                            Mode="OneWay"
                            Source="{x:Reference AddButtonAnimation}"
                            x:DataType="aloha:AnimateProgressDouble"/>
                    </aloha:AnimateProgressDouble.Minimum>
                </aloha:AnimateProgressDouble>
            </VerticalStackLayout.Behaviors> -->            
            <Button x:Name="CameraButton"
                    ImageSource="{StaticResource IconCamera}"
                    BackgroundColor="{toolkit:AppThemeResource Primary}"
                    CornerRadius="30"
                    HeightRequest="60"
                    WidthRequest="60"
                    Command="{Binding TakePhotoCommand}"
                    Opacity="0"/>

            <Button x:Name="MicrophoneButton"
                    ImageSource="{toolkit:AppThemeResource IconMicrophone}"
                    BackgroundColor="{toolkit:AppThemeResource Primary}"
                    CornerRadius="30"
                    HeightRequest="60"
                    WidthRequest="60"
                    Command="{Binding VoiceRecordCommand}"
                    Opacity="0"/>

            <Button x:Name="KeyboardButton"
                    ImageSource="{StaticResource IconKeyboard}"
                    BackgroundColor="{toolkit:AppThemeResource Primary}"
                    CornerRadius="30"
                    HeightRequest="60"
                    WidthRequest="60"
                    Opacity="0"
                    Command="{Binding AddTaskCommand}"/>

            <controls:AddButton x:Name="ActionToggleButton"
                                Margin="0,0,0,30"
                                IsEnabled="{Binding IsBusy, Converter={StaticResource InvertedBoolConverter}}"
                                Clicked="ToggleActionButtons_Clicked">

            </controls:AddButton>

        </VerticalStackLayout>

        <!-- Settings Bottom Sheet -->
        <bottomSheet:SfBottomSheet x:Name="SettingsSheet"
                                   IsOpen="{Binding IsSettingsSheetOpen, Mode=TwoWay}"                                    
                                   GrabberBackground="{toolkit:AppThemeResource OnBackground}"
                                   GrabberHeight="5"
                                   Background="{toolkit:AppThemeResource Surface1}"
                                   CornerRadius="24">
            <bottomSheet:SfBottomSheet.BottomSheetContent>
                <ScrollView>
                    <VerticalStackLayout Padding="24"
                            Spacing="24">
                        <Label Text="Settings"
                                FontAttributes="Bold"
                                FontSize="24"
                                HorizontalOptions="Center"/>

                        <sf:SfTextInputLayout IsHintAlwaysFloated="True"
                                Hint="Enable Telepathy"
                                Padding="8">
                            <Switch IsToggled="{Binding IsTelepathyEnabled, Mode=TwoWay}"
                                    OnColor="{toolkit:AppThemeResource Primary}"/>
                        </sf:SfTextInputLayout>
                        
                        <sf:SfTextInputLayout IsHintAlwaysFloated="True"
                                Hint="Enable Location Services"
                                Padding="8">
                            <VerticalStackLayout Spacing="8">
                                <Switch IsToggled="{Binding IsLocationEnabled, Mode=TwoWay}"
                                        OnColor="{toolkit:AppThemeResource Primary}"/>

                                <Grid ColumnDefinitions="*, Auto"
                                        IsVisible="{Binding IsLocationEnabled}">
                                    <Label Text="{Binding CurrentLocation}"
                                           VerticalOptions="Center"
                                           Margin="0,8,0,0"/>

                                    <Button Grid.Column="1"
                                            Text="Refresh"
                                            Command="{Binding RefreshLocationCommand}"
                                            IsVisible="{Binding IsLocationEnabled}"
                                            IsEnabled="{Binding IsGettingLocation, Converter={StaticResource InvertedBoolConverter}}"
                                            Margin="8,0,0,0"/>
                                </Grid>

                                <ActivityIndicator IsRunning="{Binding IsGettingLocation}"
                                                   IsVisible="{Binding IsGettingLocation}"
                                                   HorizontalOptions="Start"/>
                            </VerticalStackLayout>
                        </sf:SfTextInputLayout>


                        <sf:SfTextInputLayout
                            Hint="OpenAI API Key">
                            <Entry Text="{Binding OpenAIApiKey, Mode=TwoWay}"
                                    Placeholder="Enter API Key"
                                    IsPassword="True"/>
                        </sf:SfTextInputLayout>

                        <sf:SfTextInputLayout
                          Hint="Azure Foundry Key">
                            <Entry Text="{Binding FoundryApiKey, Mode=TwoWay}"
                             Placeholder="Enter Foundry Key"
                              IsPassword="True"/>
                        </sf:SfTextInputLayout>

                        <sf:SfTextInputLayout
                            Hint="Azure Foundry Endpoint">
                            <Entry Text="{Binding FoundryEndpoint, Mode=TwoWay}"
                             Placeholder="Enter Foundry Endpoint"/>
                        </sf:SfTextInputLayout>

                        <sf:SfTextInputLayout
                            Hint="Google Places API Key">
                            <Entry Text="{Binding GooglePlacesApiKeyEntry, Mode=TwoWay}"
                                    Placeholder="Enter Google Places API Key"
                                    IsPassword="True"/>
                        </sf:SfTextInputLayout>

                        <sf:SfTextInputLayout IsHintAlwaysFloated="True"
                                Hint="Calendar(s)"
                                Padding="8">

                            <VerticalStackLayout Spacing="10">
                                <ActivityIndicator IsRunning="{Binding IsLoadingCalendars}"
                                                   IsVisible="{Binding IsLoadingCalendars}"
                                                   HorizontalOptions="Start"/>

                                <VerticalStackLayout
                                    Spacing="10"
                                    IsVisible="{Binding HasLoadedCalendars}"
                                    Padding="8"
                                    BindableLayout.ItemsSource="{Binding UserCalendars}">
                                    <BindableLayout.ItemTemplate>
                                        <DataTemplate x:DataType="models:CalendarInfo">
                                            <Grid ColumnDefinitions="*, Auto"
                                                    Padding="0,5">
                                                <Label Text="{Binding Name}"
                                                       VerticalOptions="Center"/>
                                                <CheckBox Grid.Column="1"
                                                          IsChecked="{Binding IsSelected}"
                                                          Color="{toolkit:AppThemeResource Primary}"
                                                          CheckedChanged="CalendarCheckBox_CheckedChanged"/>
                                            </Grid>
                                        </DataTemplate>
                                    </BindableLayout.ItemTemplate>
                                </VerticalStackLayout>

                                
                                <Button
                                    Text="{Binding CalendarButtonText}"
                                    Command="{Binding ToggleCalendarCommand}"
                                    HorizontalOptions="Start"/>
                            </VerticalStackLayout>
                        </sf:SfTextInputLayout>

                        <sf:SfTextInputLayout
                            Hint="Personalization">
                            <Editor Text="{Binding AboutMeText, Mode=TwoWay}"
                                    HorizontalOptions="Fill"
                                    HeightRequest="100"
                                    Placeholder="Give me details to personalize your app experience."/>
                        </sf:SfTextInputLayout>

                    </VerticalStackLayout>
                </ScrollView>
            </bottomSheet:SfBottomSheet.BottomSheetContent>
        </bottomSheet:SfBottomSheet>
    </Grid>


</ContentPage>
